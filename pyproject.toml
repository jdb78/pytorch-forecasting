[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | docs/build/
  | node_modules/
  | venve/
  | .venv/
)
'''

[tool.nbqa.mutate]
isort = 1
black = 1

[project]
name = "pytorch_forecasting"
readme = "README.md"         # Markdown files are supported
version = "1.0.0"            # is being replaced automatically

authors = [
  {name = "Jan Beitner"},
]
requires-python = ">=3.8,<3.13"
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
]
description = "Forecasting timeseries with PyTorch - dataloaders, normalizers, metrics and models"

dependencies = [
  "numpy<2.0.0",
  "torch >=2.0.0,!=2.0.1,<3.0.0",
  "lightning >=2.0.0,<3.0.0",
  "optuna >=3.1.0,<3.3.0",
  "scipy >=1.8,<2.0",
  "pandas >=1.3.0,<3.0.0",
  "scikit-learn >=1.2,<2.0",
  "matplotlib",
  "statsmodels",
  "pytorch-optimizer >=2.5.1,<4.0.0",
]

[project.optional-dependencies]

dev = [
  "pydocstyle >=6.1.1,<7.0.0",
  # checks and make tools
  "pre-commit >=3.2.0,<4.0.0",
  "invoke",
  "flake8",
  "mypy",
  "pylint",
  "isort",
  # pytest
  "pytest",
  "pytest-xdist",
  "pytest-cov",
  "pytest-sugar",
  "coverage",
  "pyarrow",
  # jupyter notebook
  "ipykernel",
  "nbconvert",
  "black[extras]",
  # documentatation
  "sphinx",
  "pydata-sphinx-theme",
  "nbsphinx",
  "recommonmark",
  "ipywidgets>=8.0.1,<9.0.0",
  "pytest-dotenv>=0.5.2,<1.0.0",
  "tensorboard>=2.12.1,<3.0.0",
  "pandoc>=2.3,<3.0.0",
  "cpflows",
]

github-actions = ["pytest-github-actions-annotate-failures"]
graph = ["networkx"]
mqf2 = ["cpflows"]

[tool.setuptools.packages.find]
exclude = ["build_tools"]

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=70.0.0",
]
